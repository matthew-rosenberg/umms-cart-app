{"version":3,"sources":["HomePage/logo.jpg","HomePage/styled.js","utils/utils.js","HomePage/Home.js","ToxManagementPage/styled.js","ToxManagementPage/ToxManagement.js","ManagementTypePage/ManagementType.js","TreatmentGuidePage/styled.js","TreatmentGuidePage/TreatmentGuide.js","App.js","reportWebVitals.js","index.js"],"names":["StyledLogo","styled","img","StyledHomeHeader","Row","StyledHomeFooter","StyledJournalMedical","JournalMedical","StyledCard","Card","StyledInfoCircle","InfoCircle","StyledHomeContent","queryData","data","nameList","endpoint","name","item","handleNextPageClick","history","next","push","window","location","pathname","Home","useHistory","src","logo","alt","CardDeck","Body","Title","onClick","ToxicityManagement","props","drugs","cards","drug","ManagementType","drugtype","useParams","gradeTypes","StyledAccordion","Accordion","StyledCardHeader","Header","StyledAlert","Alert","StyledButtonGroup","ButtonGroup","TreatmentGuide","managementtype","grades","useState","gradeSelection","setGradeSelection","optionSelection","setOptionSelection","grade","Button","variant","active","Toggle","as","eventKey","Collapse","description","gradeData","optionButtons","followup","options","option","response","require","App","Container","fluid","className","path","render","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2542c1b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.412a2035.jpg\";","import styled from 'styled-components'\r\nimport { Row, Card } from 'react-bootstrap'\r\nimport { JournalMedical, InfoCircle } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 90%;\r\n    height: 100%;\r\n    // margin-top: 5%;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n`;\r\n\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n    font-size: 300%;\r\n`;\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\n    // display: flex;\r\n    flex-direction: row;\r\n    // background-color: red;\r\n    align-items: center;\r\n    // border: 2px solid rgba(0,0,0,.125);\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n    margin-right: 1%;\r\n`;\r\n\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    justify-content: center;\r\n    margin-top: 9%;\r\n`;\r\n\r\n\r\n// export { \r\n//     StyledLogo, \r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard, \r\n//     StyledInfoCircle\r\n// } ;","export const queryData = (data, nameList) => {\r\n  let endpoint = null;\r\n  \r\n  if (nameList === [null]) {\r\n    return null;\r\n  }\r\n\r\n  for (const name of nameList) {\r\n    for (const item of data) {\r\n      if (item.name === name) {\r\n        data = item;\r\n        endpoint = item;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return endpoint;\r\n}\r\n\r\nexport const handleNextPageClick = (history, next) => {\r\n  history.push(`${window.location.pathname}${next}/`);\r\n};","import logo from './logo.jpg';\r\nimport { CardDeck, Card } from 'react-bootstrap'\r\nimport { StyledHomeHeader, StyledLogo, StyledJournalMedical, StyledHomeContent, StyledCard, StyledHomeFooter, StyledInfoCircle } from './styled.js';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleNextPageClick } from '../utils/utils';\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeHeader>\r\n        <StyledLogo src={logo} alt={'logo'}></StyledLogo>\r\n      </StyledHomeHeader>\r\n      <StyledHomeContent>\r\n        <CardDeck>\r\n          <StyledCard>\r\n            <StyledJournalMedical></StyledJournalMedical>\r\n            <Card.Body>\r\n              <Card.Title>Toxicity Grading</Card.Title>\r\n            </Card.Body>\r\n          </StyledCard>\r\n          <StyledCard>\r\n            <StyledJournalMedical></StyledJournalMedical>\r\n            <div onClick={() => handleNextPageClick(history, \"toxicitymanagement\")}>\r\n              <Card.Body>\r\n                <Card.Title>Toxicity Management</Card.Title>\r\n              </Card.Body>\r\n            </div>\r\n          </StyledCard>\r\n        </CardDeck>\r\n      </StyledHomeContent>\r\n      <StyledHomeFooter>\r\n        <StyledInfoCircle />\r\n        <span>About Us</span>\r\n      </StyledHomeFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from 'styled-components'\r\nimport { Row, Card } from 'react-bootstrap'\r\nimport { JournalMedical, InfoCircle } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 90%;\r\n    height: 100%;\r\n    // margin-top: 5%;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n`;\r\n\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n    font-size: 300%;\r\n`;\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\n    // display: flex;\r\n    flex-direction: row;\r\n    // background-color: red;\r\n    align-items: center;\r\n    // border: 2px solid rgba(0,0,0,.125);\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n    margin-right: 1%;\r\n`;\r\n\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    justify-content: center;\r\n    margin-top: 9%;\r\n`;\r\n\r\n\r\n// export { \r\n//     StyledLogo, \r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard, \r\n//     StyledInfoCircle\r\n// } ;","import { CardDeck, Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { StyledHomeContent, StyledCard } from \"./styled.js\";\r\nimport { handleNextPageClick } from \"../utils/utils.js\";\r\n\r\nfunction ToxicityManagement(props) {\r\n  const history = useHistory();\r\n  const drugs = props.data.drugs;\r\n\r\n  const cards = [];\r\n\r\n  for (const drug of drugs) {\r\n    cards.push(\r\n      <div key={`${drug.name} card`} onClick={() => handleNextPageClick(history, drug.name)}>\r\n        <StyledCard>\r\n          <Card.Body>\r\n            <Card.Title>{drug.name}</Card.Title>\r\n          </Card.Body>\r\n        </StyledCard>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeContent>\r\n        <CardDeck>{cards}</CardDeck>\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToxicityManagement;\r\n","import { CardDeck, Card } from \"react-bootstrap\";\r\nimport { StyledHomeContent, StyledCard } from \"../ToxManagementPage/styled.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { queryData, handleNextPageClick } from \"../utils/utils.js\";\r\n\r\nfunction ManagementType(props) {\r\n  const data = props.data;\r\n  const { drugtype } = useParams();\r\n  const gradeTypes = queryData(data.drugs, [drugtype]).gradeTypes;\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeContent>\r\n        <CardDeck>\r\n          <div onClick={() => handleNextPageClick(history, gradeTypes[0].name)}>\r\n            <StyledCard>\r\n              <Card.Body>\r\n                <Card.Title>{gradeTypes[0].name}</Card.Title>\r\n              </Card.Body>\r\n            </StyledCard>\r\n          </div>\r\n          <div onClick={() => handleNextPageClick(history, gradeTypes[1].name)}>\r\n            <StyledCard>\r\n              <Card.Body>\r\n                <Card.Title>{gradeTypes[1].name}</Card.Title>\r\n              </Card.Body>\r\n            </StyledCard>\r\n          </div>\r\n        </CardDeck>\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagementType;\r\n","import styled from 'styled-components'\r\nimport { Row, Card, Accordion, Alert, ButtonGroup } from 'react-bootstrap'\r\nimport { JournalMedical, InfoCircle } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 90%;\r\n    height: 100%;\r\n    // margin-top: 5%;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n`;\r\n\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n    font-size: 300%;\r\n`;\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\n    // display: flex;\r\n    // flex-direction: row;\r\n    // background-color: red;\r\n    // align-items: center;\r\n    // border: 2px solid rgba(0,0,0,.125);\r\n    // box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    border: unset;\r\n`;\r\n\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n    margin-right: 1%;\r\n`;\r\n\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    justify-content: center;\r\n    margin-top: 9%;\r\n`;\r\n\r\nexport const StyledAccordion = styled(Accordion)`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n    justify-content: space-between;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: unset;\r\n    border-bottom: unset;\r\n`;\r\n\r\nexport const StyledAlert = styled(Alert)`\r\n    width: 100%;\r\n    text-align: left;\r\n    position: relative;\r\n    padding: 2%;\r\n    margin-bottom: unset;\r\n`;\r\n\r\nexport const StyledButtonGroup = styled(ButtonGroup)`\r\n    width: 100%;\r\n`;\r\n","import { Card, Accordion, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router\";\r\nimport { StyledHomeContent, StyledCard, StyledAccordion, StyledCardHeader, StyledAlert, StyledButtonGroup } from \"./styled.js\";\r\nimport { queryData } from \"../utils/utils.js\";\r\nimport { useState } from \"react\";\r\n\r\nfunction TreatmentGuide(props) {\r\n  const history = useHistory();\r\n  const data = props.data;\r\n  const { drugtype, managementtype } = useParams();\r\n  const grades = queryData(queryData(data.drugs, [drugtype]).gradeTypes, [\r\n    managementtype,\r\n  ]).grades;\r\n\r\n  const [gradeSelection, setGradeSelection] = useState(\"\");\r\n  const [optionSelection, setOptionSelection] = useState(\"\");\r\n\r\n  const cards = [];\r\n\r\n  for (const grade of grades) {\r\n    cards.push(\r\n      <StyledCard>\r\n        <Button variant=\"outline-primary\" key={`${grade.name} card`} active={grade.name === gradeSelection} onClick={() => setGradeSelection(grade.name)}>\r\n          <StyledCardHeader>\r\n            {grade.name}\r\n            <Accordion.Toggle as={Button} variant=\"\" eventKey={grade.name}>\r\n              +\r\n            </Accordion.Toggle>\r\n          </StyledCardHeader>\r\n          <Accordion.Collapse eventKey={grade.name}>\r\n            <Card.Body>{grade.description}</Card.Body>\r\n          </Accordion.Collapse>\r\n        </Button>\r\n      </StyledCard>\r\n    );\r\n  }\r\n\r\n  const gradeData = queryData(grades, [gradeSelection]);\r\n\r\n  const optionButtons = [];\r\n  if (gradeData && gradeData.followup) {\r\n    for (const option of gradeData.followup.options) {\r\n      optionButtons.push(<Button variant=\"outline-primary\" key={`${option.name} option`} active={option.name === optionSelection} onClick={() => setOptionSelection(option.name)}>{option.name}</Button>);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeContent>\r\n        <StyledAlert variant=\"dark\">Select Toxicity Grade:</StyledAlert>\r\n        <StyledAccordion>{cards}</StyledAccordion>\r\n        { gradeSelection && (\r\n          gradeData.followup \r\n          ? <>\r\n              <StyledAlert variant=\"dark\">{gradeData.followup.name}</StyledAlert>\r\n              <StyledButtonGroup>\r\n                {optionButtons}\r\n              </StyledButtonGroup>\r\n              {optionSelection && \r\n                <>\r\n                  <StyledAlert variant=\"success\">Response:</StyledAlert>\r\n                  <div>\r\n                    {queryData(gradeData.followup.options, [optionSelection]).response}\r\n                  </div>\r\n                </>\r\n              }\r\n            </>\r\n          : <div>{gradeData.response}</div>)\r\n          \r\n        }\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentGuide;\r\n","import './App.css';\r\nimport { Container } from 'react-bootstrap'\r\nimport Home from './HomePage/Home';\r\nimport ToxicityManagement from './ToxManagementPage/ToxManagement';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport ManagementType from './ManagementTypePage/ManagementType';\r\nimport TreatmentGuide from './TreatmentGuidePage/TreatmentGuide';\r\n\r\nconst data = require('./data.json');\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Container fluid className=\"App\">\r\n        <Switch>\r\n        <Route path=\"/toxicitymanagement/:drugtype/:managementtype/\"           \r\n          render={(props) => (\r\n            <TreatmentGuide {...props} data={data} />\r\n           )}/>\r\n          <Route path=\"/toxicitymanagement/:drugtype/\"           \r\n          render={(props) => (\r\n            <ManagementType {...props} data={data} />\r\n           )}/>\r\n          <Route exact path=\"/toxicitymanagement/\"\r\n           render={(props) => (\r\n            <ToxicityManagement {...props} data={data} />\r\n           )}/>\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\r\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\r\n      crossOrigin=\"anonymous\"\r\n    /> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}