{"version":3,"sources":["HomePage/half_logo.jpg","HomePage/styled.js","utils/utils.js","ToxManagementPage/styled.js","ToxManagementPage/ToxManagement.js","AddToHomeScreen/styled.js","AddToHomeScreen/AddToHomeScreen.js","HomePage/Home.js","NavHeader/styled.js","NavHeader/NavHeader.js","AboutUsPage/styled.js","AboutUsPage/AboutUs.js","ManagementTypePage/styled.js","ManagementTypePage/ManagementType.js","TreatmentGuidePage/styled.js","TreatmentGuidePage/TreatmentGuide.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["FixedContainer","styled","div","StyledLogo","img","StyledHomeHeader","Row","StyledTitle","span","StyledHomeFooter","StyledInfoCircle","InfoCircle","StyledHomeContent","StyledFooterText","StyledVerticalLine","queryData","data","nameList","endpoint","name","item","handleNextPageClick","history","next","push","window","location","pathname","stripAfterSymbol","string","inclusive","symbol","includes","split","sessionAdded","localStorageString","hasVisitedBefore","Boolean","localStorage","getItem","markAsHavingVisitedBefore","count","setItem","visitedCount","parseInt","timeString","markAsHavingVisitedForTime","StyledCardDeck","CardDeck","StyledCard","Card","StyledCardHeader","Header","StyledCardBody","StyledCardTitle","h4","ToxicityManagement","props","useHistory","drugs","cards","parseDrugName","sort","drug1","drug2","localeCompare","drug","onClick","StyledBoxArrow","BoxArrowUp","StyledPlusSquare","PlusSquare","StyledToast","Toast","StyledToastHeader","AddToHomeScreen","isIosWebUserToIgnore","useState","showA","setShowA","userAgent","navigator","toLowerCase","test","isIos","standalone","show","onClose","className","Body","Home","isUser","setTimeout","confirmationShow","setConfirmationShow","rejectionShow","setRejectionShow","handleConfirmationClose","handleConfirmationNo","HealthcareCheckModal","Modal","centered","onHide","backdrop","keyboard","Footer","Button","variant","src","halfLogo","alt","StyledHeader","invisible","css","StyledBackButton","ArrowLeftCircle","StyledMultiHeader","StyledHeaderText","StyledGuideHeaderText","StyledSubHeaderText","NavHeader","previousPage","subtitle","stripTrailingParentheses","goBack","StyledUL","ul","StyledLI","li","lastModified","modiDate","Date","document","getMonth","getDate","getFullYear","AboutUs","href","StyledCardSubtext","StyledRoundCard","ManagementType","drugtype","useParams","gradeTypes","gradeTypeCards","gradeType","gradeSource","packageInsertURL","target","rel","e","stopPropagation","StyledGuideCard","StyledUl","StyledChevronDown","Accordion","Toggle","active","ChevronDown","activated","StyledAccordion","StyledButton","StyledSubtext","StyledAlert","Alert","StyledStickyAlert","top","StyledButtonGroup","ButtonGroup","PseudoElementSpace","TreatmentGuide","managementtype","queryDataResult","grades","toggledGrade","setToggledGrade","gradeSelection","setGradeSelection","followupSelection","setFollowupSelection","followupSelection2","setFollowupSelection2","grade","as","eventKey","handleAccordionToggle","Collapse","description","gradeData","optionButtons","followup","options","option","unshift","optionButtons2","option2","prepareFollowupAnswerText","prepareResponseText","responseTextList","paragraphs","bulletpointsByParagraph","entries","map","bulletpoint","nIndex","trim","subBulletpoint","tIndex","superSubBulletpoint","sIndex","replaceWithBold","pIndex","bIndex","points","arr","str","bold","replaceAll","ScrollingAlert","alertRef","useRef","choice","console","log","ref","response","require","App","Container","fluid","exact","path","component","render","to","isLocalhost","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById","URL","process","origin","addEventListener","fetch","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d23fc9bc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/half_logo.90d90486.jpg\";","import styled from 'styled-components'\r\nimport { Row } from 'react-bootstrap'\r\nimport { InfoCircle } from 'react-bootstrap-icons';\r\n\r\nexport const FixedContainer = styled.div`\r\n    // scroll-padding-top: 0;\r\n    // scroll-margin-top: 0;\r\n    // position: fixed;\r\n    // overflow: hidden;\r\n    // overflow-x: auto;\r\n    width: 100%;\r\n    left: 0;\r\n`;\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 4vw;\r\n    // width: 2%;\r\n    // height: 4vh;\r\n    margin-top: 1vh;\r\n    margin-bottom: 1vh;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    position: fixed;\r\n    z-index: 10;\r\n    width: 100%;\r\n    background-color: white;\r\n    top: 0;\r\n    // scroll-padding-top: 0;\r\n    // scroll-margin-top: 0;\r\n    // padding-bottom: 1vh;\r\n    padding-top: 1vh;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    // margin-bottom: 1%;\r\n    // margin-left: unset;\r\n    // margin-right: unset;\r\n`;\r\n\r\nexport const StyledTitle = styled.span`\r\n    font-size: 6vw;\r\n    font-weight: bold;\r\n    font-family: sans-serif;\r\n    // background-color: #231f20;\r\n    // color: white;\r\n    // width: 100%;\r\n    // border-left: solid;\r\n    border-color: #231f20;\r\n    border-width: 2px;\r\n    // margin-left: 8px;\r\n    // padding-left: 8px;\r\n`\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    display: flex;\r\n    flex-direction: column;\r\n    // overflow: visible;\r\n    padding-bottom: 2vh;\r\n    padding-top: 2vh;\r\n    background-color: white;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    // color: white;\r\n    // background-color: rgb(33 31 31 / 100%);\r\n    align-items: center;\r\n    position: fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n    \r\n`;\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n    margin-right: 1%;\r\n    \r\n    &:active {\r\n        background-color: gainsboro;\r\n        // background-size: 100%;\r\n        transition: background 0s;\r\n      }\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    // position: unset;\r\n    overflow: auto;\r\n    // scroll-behavior: auto;\r\n    // overflow-y: scroll;\r\n    justify-content: center;\r\n    margin-top: 12vh;\r\n    margin-bottom: 9vh;\r\n`;\r\n\r\nexport const StyledFooterText = styled.div`\r\n    width: 100%;\r\n    // border-bottom: solid;\r\n    // border-color: rgb(33 31 31 / 100%);\r\n    // border-width: 1px;\r\n    // padding-bottom: 3%;\r\n`\r\n\r\nexport const StyledVerticalLine = styled.div`\r\n    border-left: solid;\r\n    border-color: #231f20;\r\n    border-width: 1px;\r\n    margin-left: 8px;\r\n    padding-left: 8px;\r\n    height: 4vh;\r\n    // width: 2px;\r\n`\r\n","export const queryData = (data, nameList) => {\r\n  let endpoint = null;\r\n\r\n  if (nameList === [null]) {\r\n    return null;\r\n  }\r\n\r\n  for (const name of nameList) {\r\n    for (const item of data) {\r\n      if (item.name === name) {\r\n        data = item;\r\n        endpoint = item;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return endpoint;\r\n}\r\n\r\n\r\nexport const handleNextPageClick = (history, next) => {\r\n  history.push(`${window.location.pathname}${next}/`);\r\n};\r\n\r\n\r\nexport const stripAfterSymbol = (string, inclusive = true) => {\r\n  let symbol = \"\";\r\n  if (string.includes(\"®\")) {\r\n    symbol = \"®\";\r\n  } else if (string.includes(\"™\")) {\r\n    symbol = \"™\";\r\n  }\r\n\r\n  if (inclusive) {\r\n    return string.split(/®|™/)[0];\r\n  } else {\r\n    return string.split(/®|™/)[0] + symbol;\r\n  }\r\n}\r\n\r\nlet sessionAdded = false;\r\nexport const localStorageString = \"Number of visits\"\r\nexport function adjustVisitCount() {\r\n  if (hasVisitedBefore() && !sessionAdded) {\r\n    const newNumVisits = visitedCount() + 1\r\n    markAsHavingVisitedBefore(newNumVisits);\r\n    sessionAdded = true;\r\n  }\r\n}\r\n\r\nexport function hasVisitedBefore() {\r\n  return Boolean(window.localStorage.getItem(localStorageString));\r\n}\r\n\r\nexport function markAsHavingVisitedBefore(count = 1) {\r\n  window.localStorage.setItem(localStorageString, count)\r\n}\r\n\r\nexport function visitedCount() {\r\n  if (!hasVisitedBefore()) {\r\n    return -1\r\n  }\r\n  return parseInt(window.localStorage.getItem(localStorageString))\r\n}\r\n\r\nconst timeString = 'User has spent time on website'\r\nexport function markAsHavingVisitedForTime(ms = 10000) {\r\n  window.localStorage.setItem(timeString, true)\r\n}\r\n\r\nexport function hasVisitedForTime() {\r\n  return Boolean(window.localStorage.getItem(timeString))\r\n}","import styled from \"styled-components\";\r\nimport { Card, CardDeck } from \"react-bootstrap\";\r\n\r\n\r\nexport const StyledCardDeck = styled(CardDeck)`\r\n  flex-direction: column;\r\n  width: 90%;\r\n  max-width: 700px;\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: row;\r\n  // background-color: red;\r\n  align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  padding-top: 3%;\r\n  padding-bottom: 3%;\r\n\r\n  background-position: center;\r\n  transition: background 0.5s;\r\n\r\n  // &:hover {\r\n  //   background: lightgray radial-gradient(circle, transparent 1%, lightgray 1%)\r\n  //     center/15000%;\r\n  // }\r\n\r\n  &:active {\r\n    background-color: gainsboro;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  justify-content: space-between;\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n`;\r\n\r\nexport const StyledCardBody = styled.div`\r\n  // justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // align-items: center;\r\n  // background-color: unset;\r\n  // border-bottom: unset;\r\n`;\r\n\r\nexport const StyledCardTitle = styled.h4`\r\n  text-align: start;\r\n  margin-bottom: 0;\r\n`;\r\n","import { useHistory } from \"react-router\";\r\nimport {\r\n  StyledCard,\r\n  StyledCardHeader,\r\n  StyledCardDeck,\r\n  StyledCardTitle,\r\n  StyledCardBody,\r\n} from \"./styled.js\";\r\nimport { handleNextPageClick } from \"../utils/utils.js\";\r\n\r\nexport function ToxicityManagement(props) {\r\n  const history = useHistory();\r\n  const drugs = props.data.drugs;\r\n\r\n  const cards = [];\r\n\r\n  const parseDrugName = (name) => {\r\n    return [name.split(/®|™/)[0], name.split(/®|™/)[1]];\r\n  };\r\n\r\n  drugs.sort((drug1, drug2) => drug1.name.localeCompare(drug2.name))\r\n\r\n  for (const drug of drugs) {\r\n    cards.push(\r\n      <StyledCard\r\n        key={`${drug.name} card`}\r\n        onClick={() => handleNextPageClick(history, `toxicitymanagement/${drug.name}`)}\r\n      >\r\n        <StyledCardHeader>\r\n          <StyledCardBody>\r\n            <StyledCardTitle>{parseDrugName(drug.name)[0]}</StyledCardTitle>\r\n            <span>{parseDrugName(drug.name)[1]}</span>\r\n          </StyledCardBody>\r\n        </StyledCardHeader>\r\n      </StyledCard>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StyledCardDeck>{cards}</StyledCardDeck>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToxicityManagement;\r\n","import styled from 'styled-components'\r\nimport { Toast, Button } from \"react-bootstrap\";\r\nimport { BoxArrowUp, PlusSquare } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledBoxArrow = styled(BoxArrowUp)`\r\n    color: #007bff;\r\n`;\r\n\r\nexport const StyledPlusSquare = styled(PlusSquare)`\r\n    color: #007bff;\r\n`;\r\n\r\nexport const StyledToast = styled(Toast)`\r\n    position: fixed;\r\n    width: 92vw;\r\n    left: 4vw;\r\n    z-index: 100;\r\n    background-color: rgba(255,255,255);\r\n    border-color: darkgray;\r\n    border-radius: 1rem;\r\n    top: 2rem;\r\n`;\r\n\r\nexport const StyledToastHeader = styled(Toast.Header)`\r\n    justify-content: space-between;\r\n    border-top-left-radius: 1rem;\r\n    border-top-right-radius: 1rem;\r\n`;","import {\r\n  StyledToast,\r\n  StyledToastHeader,\r\n  StyledBoxArrow,\r\n  StyledPlusSquare\r\n} from \"./styled.js\";\r\nimport { Toast, Button } from \"react-bootstrap\";\r\n// import ReactNative from 'react-native';\r\n// import Share from 'react-native-share';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { visitedCount, hasVisitedForTime, hasVisitedBefore } from \"../utils/utils\";\r\n\r\nfunction AddToHomeScreen() {\r\n  const isIosWebUserToIgnore = visitedCount() > 3 && visitedCount() != 10;\r\n  const [showInstallMessage, setShowInstallMessage] = useState(false);\r\n\r\n  // Detects if device is on iOS \r\n  const isIos = () => {\r\n    const userAgent = window.navigator.userAgent.toLowerCase();\r\n    return /iphone|ipad|ipod/.test(userAgent);\r\n  }\r\n  // Detects if device is in standalone mode (already added to home screen)\r\n  const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\r\n\r\n  // Checks if should display install popup notification:\r\n\r\n  // if (isIos() && !isInStandaloneMode() && !isIosWebUserToIgnore) { //TODO: implement changing state of isIosWebUserToIgnore\r\n  //   setShowInstallMessage(true);\r\n  // }\r\n\r\n  const [showA, setShowA] = useState(true);\r\n  const toggleShowA = () => setShowA(!showA);\r\n\r\n  // const handleSharing = () => {\r\n  //   if (navigator.share) {\r\n  // Share.open(null)\r\n  // .then((res) => {\r\n  //   console.log(res);\r\n  // })\r\n  // .catch((err) => {\r\n  //   err && console.log(err);\r\n  // });\r\n  // try {\r\n  //   navigator\r\n  //     .share(\"shareDetails\").\r\n  //     .then(() =>\r\n  //       console.log(\"Hooray! Your content was shared to tha world\")\r\n  //     );\r\n  // } catch (error) {\r\n  //   console.log(`Oops! I couldn't share to the world because: ${error}`);\r\n  // }\r\n  //   } else {\r\n  //     // fallback code\r\n  //     console.log(\r\n  //       \"Web share is currently not supported on this browser. Please provide a callback\"\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      {isIos() && !isInStandaloneMode() && !isIosWebUserToIgnore &&\r\n        <StyledToast show={showA} onClose={toggleShowA}>\r\n          <StyledToastHeader>\r\n            {/* <img src=\"holder.js/20x20?text=%20\" className=\"rounded me-2\" alt=\"\" /> */}\r\n            <strong className=\"me-auto\">Tip: Add Website to iPhone Home Screen</strong>\r\n            {/* <small>11 mins ago</small> */}\r\n          </StyledToastHeader>\r\n          <Toast.Body> Tap the <i>Share</i> icon (<StyledBoxArrow />), scroll down, and tap <i>Add to Home Screen</i> (<StyledPlusSquare />).</Toast.Body>\r\n        </StyledToast>\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddToHomeScreen;\r\n","import halfLogo from \"./half_logo.jpg\";\r\nimport { Modal, Button } from \"react-bootstrap\";\r\nimport {\r\n  StyledHomeHeader,\r\n  StyledLogo,\r\n  StyledHomeContent,\r\n  StyledHomeFooter,\r\n  StyledInfoCircle,\r\n  StyledTitle,\r\n  StyledVerticalLine,\r\n  StyledFooterText,\r\n  FixedContainer,\r\n} from \"./styled.js\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleNextPageClick, hasVisitedBefore, markAsHavingVisitedBefore, markAsHavingVisitedForTime } from \"../utils/utils\";\r\nimport { ToxicityManagement } from '../ToxManagementPage/ToxManagement';\r\nimport AddToHomeScreen from '../AddToHomeScreen/AddToHomeScreen';\r\n\r\n\r\n\r\nfunction Home(props) {\r\n\r\n  const isUser = hasVisitedBefore()\r\n  setTimeout(markAsHavingVisitedForTime, 10_000)\r\n\r\n  const history = useHistory();\r\n\r\n  const [confirmationShow, setConfirmationShow] = useState(true);\r\n  const [rejectionShow, setRejectionShow] = useState(false);\r\n\r\n  // const [showInstallMessage, setShowInstallMessage] = useState(false);\r\n\r\n  const handleConfirmationClose = () => {\r\n    setConfirmationShow(false);\r\n    markAsHavingVisitedBefore();\r\n  };\r\n  const handleConfirmationNo = () => {\r\n    setConfirmationShow(false);\r\n    setRejectionShow(true);\r\n  };\r\n\r\n  // // Detects if device is on iOS \r\n  // const isIos = () => {\r\n  //   const userAgent = window.navigator.userAgent.toLowerCase();\r\n  //   return /iphone|ipad|ipod/.test( userAgent );\r\n  // }\r\n  // // Detects if device is in standalone mode\r\n  // const isInStandaloneMode = () => ('standalone' in window.navigator) && (window.navigator.standalone);\r\n\r\n  // // Checks if should display install popup notification:\r\n  // if (isIos() && !isInStandaloneMode() && !isIosWebUserToIgnore) { //TODO: implement changing state of isIosWebUserToIgnore\r\n  //   setShowInstallMessage(true);\r\n  // }\r\n\r\n  const HealthcareCheckModal = () => (\r\n    <>\r\n      <Modal\r\n        centered\r\n        show={confirmationShow && !isUser}\r\n        onHide={handleConfirmationClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <h5>Are you a healthcare professional?</h5>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6>\r\n            You are going to a website that contains clinical information and\r\n            was created specifically for healthcare professionals.\r\n          </h6>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleConfirmationNo}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmationClose}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal centered show={rejectionShow} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Body>\r\n          <h5>This information is designed for healthcare professionals.</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  );\r\n\r\n\r\n  // const AddToHomeScreenModal = () => {\r\n  //   // How to test different user agents: https://www.youtube.com/watch?v=-v6C6M7OovA\r\n  //   let ios = false;\r\n  //   let android = false;\r\n  //   let desktop = false;\r\n  //   if (/iPhone|iPad|iPod/i.test(navigator.userAgent)) {\r\n  //     ios = true;\r\n  //   }\r\n  //   else if (/android/i.test(navigator.userAgent)) {\r\n  //     android = true;\r\n  //   }\r\n  //   else {\r\n  //     desktop = true;\r\n  //   }\r\n  //   const isAccesingFromIosBrowser = ios && window.navigator.standalone;\r\n  //   if (isAccesingFromIosBrowser) {\r\n  //     return (\r\n  //       <>\r\n  //         <h1>Add to Home Screen</h1>\r\n  //       </>\r\n  //     )\r\n  //   }\r\n  //   else if (desktop) {\r\n  //     return (\r\n  //       <>\r\n  //         <h1>The website is a MOW not a DOW</h1>\r\n  //       </>\r\n  //     )\r\n  //   }\r\n  //   else {\r\n  //     return (<>Android takes care of add to home screen for PWA's</>)\r\n  //   }\r\n  // }\r\n\r\n  return (\r\n    <FixedContainer>\r\n      <StyledHomeHeader>\r\n        <StyledLogo src={halfLogo} alt={\"logo\"}></StyledLogo>\r\n        <StyledVerticalLine></StyledVerticalLine>\r\n        <StyledTitle>CAR-T Toxicity Management</StyledTitle>\r\n      </StyledHomeHeader>\r\n      <HealthcareCheckModal />\r\n      <StyledHomeContent>\r\n        <ToxicityManagement {...props} data={props.data} />\r\n      </StyledHomeContent>\r\n      <AddToHomeScreen />\r\n      <StyledHomeFooter>\r\n        <StyledFooterText\r\n          onClick={() => handleNextPageClick(history, \"aboutus\")}\r\n        >\r\n          <StyledInfoCircle />\r\n          <span>About Us</span>\r\n        </StyledFooterText>\r\n      </StyledHomeFooter>\r\n    </FixedContainer>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled, { css } from \"styled-components\";\r\nimport { Row } from \"react-bootstrap\";\r\nimport { ArrowLeftCircle } from \"react-bootstrap-icons\";\r\n\r\nexport const StyledHeader = styled(Row)`\r\n  // padding-bottom: 4%;\r\n  // padding-top: 4%;\r\n  // box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n  //   rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  // justify-content: center;\r\n  background-color: #231f20;\r\n  color: rgb(255 255 255 / 100%);\r\n  align-items: center;\r\n  position: fixed;\r\n  // position: sticky;\r\n  // position: -webkit-sticky;\r\n  width: 100%;\r\n  z-index: 10;\r\n  top: 0px;\r\n  border-bottom: solid;\r\n  border-color: #c8102e;\r\n\r\n  ${(props) =>\r\n    props.invisible &&\r\n    css`\r\n      // display: none;\r\n      position: unset;\r\n    `};\r\n`;\r\n\r\nexport const StyledBackButton = styled(ArrowLeftCircle)`\r\n  font-size: 190%;\r\n  margin-left: 15px;\r\n  position: absolute;\r\n\r\n  &:active {\r\n    color: gray;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n`;\r\n\r\nexport const StyledMultiHeader = styled.div`\r\n  // display: flex;\r\n  // flex-direction: column;\r\n  // margin: auto;\r\n  // width: 100%;\r\n  margin-top: 1em;\r\n  margin-bottom: 1em;\r\n  // margin-left: 15%;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const StyledHeaderText = styled.div`\r\n  font-size: x-large;\r\n  margin: auto;\r\n  margin-top: 2%;\r\n  margin-bottom: 2%;\r\n`;\r\n\r\nexport const StyledGuideHeaderText = styled.div`\r\n  font-size: x-large;\r\n  // margin: auto;\r\n  margin-bottom: 2%;\r\n  margin-top: 0;\r\n  padding-top: 0;\r\n  line-height: initial;\r\n`;\r\n\r\nexport const StyledSubHeaderText = styled.div`\r\n  font-size: smaller;\r\n  // margin: auto;\r\n  margin-top: 2%;\r\n  font-weight: 300;\r\n  text-align: start;\r\n`;\r\n","import {\r\n  StyledHeader,\r\n  StyledBackButton,\r\n  StyledHeaderText,\r\n  StyledSubHeaderText,\r\n  StyledMultiHeader,\r\n  StyledGuideHeaderText\r\n} from \"./styled.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { stripAfterSymbol } from \"../utils/utils\";\r\n\r\nfunction NavHeader(props) {\r\n  const previousPage = stripAfterSymbol(props.data);\r\n  const subtitle = props.subtitle;\r\n\r\n  const stripTrailingParentheses = (string) => {\r\n    return string.split(/(?=\\()/)[0]\r\n  };\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <StyledBackButton onClick={() => history.goBack()} />\r\n        {subtitle ? (\r\n          <StyledMultiHeader>\r\n            <StyledSubHeaderText>{stripAfterSymbol(subtitle)}</StyledSubHeaderText>\r\n            <StyledGuideHeaderText>{stripTrailingParentheses(previousPage)}</StyledGuideHeaderText>\r\n          </StyledMultiHeader>\r\n        ) : (\r\n          <StyledHeaderText>{stripTrailingParentheses(previousPage)}</StyledHeaderText>\r\n        )}\r\n      </StyledHeader>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledUL = styled.ul`\r\n    margin-top: 10vh;\r\n`;\r\n\r\nexport const StyledLI = styled.li`\r\n    // width: 100%;\r\n    text-align: left;\r\n    // position: relative;\r\n    padding: 2%;\r\n    // margin-bottom: unset;\r\n`;","import NavHeader from \"../NavHeader/NavHeader\";\r\nimport { StyledUL, StyledLI } from \"./styled.js\";\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <>\r\n      <NavHeader data={\"About Us\"} />\r\n      <StyledUL>\r\n        <StyledLI>\r\n          This website is designed to assist healthcare providers in CAR–T\r\n          Treatment Centers administering multiple CAR-T drugs.\r\n        </StyledLI>\r\n        <StyledLI>\r\n          All information on this website/application is based on publicly\r\n          published FDA package inserts linked in the \"Toxicity Management\"\r\n          page.\r\n        </StyledLI>\r\n        <StyledLI>\r\n          We are not responsible for any misuse of any of the described drugs or\r\n          any mistreatment done as a result of this website. \r\n          This website is for information only, we are not dispensing treatment decisions.\r\n        </StyledLI>\r\n        <StyledLI>This website was last updated on {lastModified()}.</StyledLI>\r\n        <StyledLI>\r\n          Please <a href=\"mailto:SDahiya@umm.edu?subject=Cartcellengine.com\">contact us</a> with any concerns regarding this website or opportunities for improvement. Do not include patient information, as we unable to weigh in on treatment decisions.\r\n        </StyledLI>\r\n      </StyledUL>\r\n    </>\r\n  );\r\n}\r\nfunction lastModified() {\r\n  var modiDate = new Date(document.lastModified);\r\n  var showAs = `${\r\n    modiDate.getMonth() + 1\r\n  }/${modiDate.getDate()}/${modiDate.getFullYear()}`;\r\n  return showAs;\r\n}\r\nexport default AboutUs;\r\n","import styled from \"styled-components\";\r\nimport { Row, Card, CardDeck } from \"react-bootstrap\";\r\n\r\nexport const StyledCardDeck = styled(CardDeck)`\r\n  width: 90%;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  max-width: 700px;\r\n`\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: column;\r\n  // background-color: red;\r\n  // align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  padding-top: 3%;\r\n  padding-bottom: 3%;\r\n\r\n  &:active {\r\n    background-color: gainsboro;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n`;\r\n\r\nexport const StyledCardSubtext = styled.div`\r\n  text-align: end;\r\n  font-size: 10px;\r\n  color: gray;\r\n  padding-right: 8px;\r\n  padding-top: 12px;\r\n`;\r\n\r\nexport const StyledRoundCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: row;\r\n  // background-color: red;\r\n  align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  padding: 4%;\r\n  border-radius: 25px;\r\n  margin-bottom: 3vh;\r\n  margin-left: 40vw;\r\n  height: 3.2em;\r\n  background-color: #ffcd00; \r\n  // background-color: #c8102e;\r\n  color: #231f20;\r\n  width: max-content;\r\n\r\n  &:active {\r\n    background-color: #d9b10f;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10vh;\r\n  flex-direction: column;\r\n  height: 90vh;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  justify-content: space-between;\r\n  display: flex;\r\n  text-align: start;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n  width: 100%;\r\n    // display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledCardTitle = styled.h4`\r\n  text-align: start;\r\n  margin-bottom: 0;\r\n`;\r\n\r\nexport const StyledCardBody = styled.div`\r\n  // justify-content: space-between;\r\n  display: flex;\r\n  flex-direction: column;\r\n  // align-items: center;\r\n  // background-color: unset;\r\n  // border-bottom: unset;\r\n`;","import {\r\n  StyledHomeContent,\r\n  StyledCard,\r\n  StyledCardDeck,\r\n  StyledCardHeader,\r\n  StyledCardTitle,\r\n  StyledRoundCard,\r\n  StyledCardSubtext\r\n} from \"./styled.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { queryData, handleNextPageClick } from \"../utils/utils.js\";\r\nimport NavHeader from \"../NavHeader/NavHeader\";\r\n\r\nfunction ManagementType(props) {\r\n  const data = props.data;\r\n  const { drugtype } = useParams();\r\n  const drug = queryData(data.drugs, [drugtype]);\r\n  const gradeTypes = drug.gradeTypes;\r\n\r\n  const history = useHistory();\r\n\r\n\r\n  const gradeTypeCards = [];\r\n\r\n  for (const gradeType of gradeTypes) {\r\n    gradeTypeCards.push(\r\n      <div onClick={() => handleNextPageClick(history, gradeType.name)}>\r\n        <StyledCard>\r\n          <StyledCardHeader>\r\n              <StyledCardTitle>\r\n                {gradeType.name.split(/(?=\\()/)[0]}\r\n              </StyledCardTitle>\r\n              <span>{gradeType.name.split(/(?=\\()/)[1]}</span>\r\n\r\n          </StyledCardHeader>              \r\n          <StyledCardSubtext>{gradeType.gradeSource}</StyledCardSubtext>\r\n        </StyledCard>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavHeader {...props} data={drugtype} />\r\n      <StyledHomeContent>\r\n        <StyledCardDeck>\r\n          {gradeTypeCards}\r\n        </StyledCardDeck>\r\n          <a\r\n            href={drug.packageInsertURL}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer noopener\"\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n        <StyledRoundCard>\r\n            FDA Package Insert\r\n        </StyledRoundCard>\r\n        </a>\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagementType;\r\n","import styled, { css } from \"styled-components\";\r\n// import { css }  from 'styled-components'\r\nimport { Row, Card, Accordion, Alert, ButtonGroup } from \"react-bootstrap\";\r\nimport { ChevronDown } from \"react-bootstrap-icons\";\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  // flex-direction: row;\r\n  // background-color: red;\r\n  // align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  // box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  // border: solid 1px #007bff;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  // margin-left: 8px;\r\n  // margin-right: 8px;\r\n  margin-top: 1px;\r\n`;\r\n\r\nexport const StyledGuideCard = styled(StyledCard)`\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\nexport const StyledUl = styled.ul`\r\n  margin-top: 0.5rem;\r\n  margin-bottom: 0.5rem;\r\n  padding-right: 16px;\r\n`;\r\n\r\nexport const StyledAccordionToggle = styled(Accordion.Toggle)`\r\n  // font-size: 20px;\r\n  // margin-right: 1%;\r\n  // transform: rotate(0deg);\r\n  // transition: transform .2s ease-out;\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: blue;\r\n      color: white;\r\n    `};\r\n`;\r\n\r\nexport const StyledChevronDown = styled(ChevronDown)`\r\n  font-size: 20px;\r\n  margin-right: 1%;\r\n  transform: rotate(0deg);\r\n  transition: transform 0.2s ease-out;\r\n\r\n  ${(props) =>\r\n    props.activated &&\r\n    css`\r\n      transform: rotate(180deg);\r\n    `};\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n  justify-content: center;\r\n  margin-top: 5.5em;\r\n`;\r\n\r\nexport const StyledAccordion = styled(Accordion)`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  // margin-top: 0.4em;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  text-align: start;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n  padding: 17px;\r\n  color: #007bff;\r\n\r\n//   background-position: center;\r\n//   transition: background 0.5s;\r\n\r\n//   &:focus {\r\n//     background: #007bff radial-gradient(circle, transparent 1%, #007bff 1%)\r\n//       center/15000%;\r\n//   }\r\n\r\n  &:active {\r\n    background-color: #d6eaff;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: #007bff;\r\n      color: white;\r\n\r\n      &:active {\r\n        background-color: #007bff;\r\n        // background-size: 100%;\r\n        transition: background 0s;\r\n      }\r\n    `};\r\n`;\r\n\r\nexport const StyledButton = styled.div`\r\n  border: solid #007bff 1px;\r\n  border-radius: 4px;\r\n  color: #007bff;\r\n  padding: 2%;\r\n  width: 50%;\r\n  \r\n  &:active {\r\n    background-color: #d6eaff;\r\n    // background-size: 100%;\r\n    transition: background 0s;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.active &&\r\n    css`\r\n      background-color: #007bff;\r\n      color: white;\r\n\r\n      &:active {\r\n        background-color: #007bff;\r\n        // background-size: 100%;\r\n        transition: background 0s;\r\n      }\r\n    `}\r\n`;\r\n\r\nexport const StyledCardBody = styled(Card.Body)`\r\n  background-color: #007bff;\r\n  text-align: start;\r\n  color: white;\r\n`;\r\n\r\nexport const StyledSubtext = styled.div`\r\n  font-size: 12px;\r\n  font-style: italic;\r\n`\r\n\r\nexport const StyledAlert = styled(Alert)`\r\n  width: 100%;\r\n  text-align: left;\r\n  position: relative;\r\n  padding: 2%;\r\n  margin-bottom: unset;\r\n  color: black;\r\n  background-color: #ffcd00;\r\n`;\r\n\r\nexport const StyledStickyAlert = styled(Alert)`\r\n  width: 100%;\r\n  text-align: left;\r\n  padding: 2%;\r\n  margin-bottom: unset;\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  border-radius: unset;\r\n  z-index: 10;\r\n  // top: 5em;\r\n\r\n  ${(props) => css`\r\n    top: ${props.top}em;\r\n  `};\r\n`;\r\n\r\nexport const StyledButtonGroup = styled(ButtonGroup)`\r\n  width: 100%;\r\n`;\r\n\r\nexport const PseudoElementSpace = styled.div`\r\n  // content: \"\";\r\n  // position: absolute;\r\n  // top: 0;\r\n  // width: 30px;\r\n  // height: 30px;\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  width: 18%;\r\n  height: 100%;\r\n  left: 82%;\r\n`;\r\n\r\nexport const PseudoElementSpace2 = styled(Row)`\r\n  // content: \"\";\r\n  // position: absolute;\r\n  // top: 0;\r\n  // width: 30px;\r\n  // height: 30px;\r\n  content: \"\";\r\n  display: inline-block;\r\n  top: 0;\r\n  width: 100%;\r\n  // height: 20%;\r\n  left: 0;\r\n`;","import { Accordion } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router\";\r\nimport {\r\n  StyledHomeContent,\r\n  StyledChevronDown,\r\n  StyledCard,\r\n  StyledAccordion,\r\n  StyledCardHeader,\r\n  StyledAlert,\r\n  StyledButtonGroup,\r\n  StyledStickyAlert,\r\n  PseudoElementSpace,\r\n  StyledCardBody,\r\n  StyledButton,\r\n  StyledSubtext,\r\n  StyledUl,\r\n  StyledGuideCard\r\n} from \"./styled.js\";\r\nimport { queryData } from \"../utils/utils.js\";\r\nimport { useState, useRef } from \"react\";\r\nimport NavHeader from \"../NavHeader/NavHeader\";\r\n\r\nfunction TreatmentGuide(props) {\r\n  const data = props.data;\r\n  const { drugtype, managementtype } = useParams();\r\n  const queryDataResult = queryData(queryData(data.drugs, [drugtype]).gradeTypes, [\r\n    managementtype,\r\n  ])\r\n  const grades = queryDataResult.grades;\r\n  const gradeSource = queryDataResult.gradeSource;\r\n\r\n  const [toggledGrade, setToggledGrade] = useState(\"\");\r\n  const [gradeSelection, setGradeSelection] = useState(\"\");\r\n  const [followupSelection, setFollowupSelection] = useState(\"\");\r\n  const [followupSelection2, setFollowupSelection2] = useState(\"\");\r\n\r\n  const cards = [];\r\n\r\n  const handleAccordionToggle = (e, grade) => {\r\n    if (toggledGrade === grade.name) {\r\n      setToggledGrade(\"\");\r\n    } else {\r\n      setToggledGrade(grade.name);\r\n      setFollowupSelection(\"\");\r\n      setFollowupSelection2(\"\");\r\n      setGradeSelection(grade.name);\r\n    }\r\n  };\r\n\r\n  for (const grade of grades) {\r\n    cards.push(\r\n      <StyledCard>\r\n        <Accordion.Toggle\r\n          variant=\"outline-primary\"\r\n          as={StyledCardHeader}\r\n          key={`${grade.name} card`}\r\n          active={grade.name === gradeSelection}\r\n          eventKey={grade.name}\r\n          onClick={(e) => handleAccordionToggle(e, grade)}\r\n        >\r\n          {grade.name}\r\n          <StyledChevronDown activated={grade.name === toggledGrade} />\r\n          <PseudoElementSpace></PseudoElementSpace>\r\n        </Accordion.Toggle>\r\n        <Accordion.Collapse eventKey={grade.name}>\r\n          <StyledCardBody>{grade.description}</StyledCardBody>\r\n        </Accordion.Collapse>\r\n      </StyledCard>\r\n    );\r\n  }\r\n\r\n  const gradeData = queryData(grades, [gradeSelection]);\r\n\r\n  const optionButtons = [];\r\n  if (gradeData && gradeData.followup) {\r\n    for (const option of gradeData.followup.options) {\r\n      optionButtons.unshift(\r\n        <StyledButton\r\n          variant=\"outline-primary\"\r\n          key={`${option.name} option`}\r\n          active={option.name === followupSelection}\r\n          onClick={() => setFollowupSelection(option.name)}\r\n        >\r\n          {option.name}\r\n        </StyledButton>\r\n      );\r\n    }\r\n  }\r\n\r\n  const optionButtons2 = [];\r\n  if (gradeData && gradeData.followup && followupSelection !== \"\" && queryData(gradeData.followup.options, [followupSelection]).followup) {\r\n    for (const option2 of queryData(gradeData.followup.options, [followupSelection]).followup.options) {\r\n      optionButtons2.unshift(\r\n        <StyledButton\r\n          variant=\"outline-primary\"\r\n          key={`${option2.name} option`}\r\n          active={option2.name === followupSelection2}\r\n          onClick={() => setFollowupSelection2(option2.name)}\r\n        >\r\n          {option2.name}\r\n        </StyledButton>\r\n      );\r\n    }\r\n  }\r\n\r\n  const prepareFollowupAnswerText = (string) => {\r\n    const stringSplit = string.split(\"(\");\r\n\r\n    return stringSplit[0];\r\n  };\r\n\r\n/*\r\n  Data Parsing Key\r\n\r\n  \\r = paragraph\r\n  \\n = line/bulletpoint\r\n  \\t = sub-bulletpoint\r\n  \\f = super sub-bulletpoint\r\n*/\r\n  const prepareResponseText = (string) => {\r\n    const responseTextList = [];\r\n    const stringWithBolds = string//.replace(/\\*.*?\\*/, (match) => <strong>{match}</strong>);\r\n    const paragraphs = stringWithBolds.split(/\\r/);\r\n    let bulletpointsByParagraph = [];\r\n\r\n    for (const [rIndex, paragraph] of paragraphs.entries()) {\r\n      bulletpointsByParagraph = paragraph.split(/\\n/);\r\n\r\n      bulletpointsByParagraph = bulletpointsByParagraph.map((bulletpoint, nIndex) =>\r\n        !bulletpoint.trim() ? null : (\r\n          bulletpoint.includes(\"\\t\") ?\r\n            <StyledUl>\r\n              {bulletpoint.split(/\\t/).map((subBulletpoint, tIndex) => !subBulletpoint.trim() ? null : subBulletpoint.includes(\"\\f\") ? \r\n                <StyledUl>\r\n                  {subBulletpoint.split(/\\f/).map((superSubBulletpoint, sIndex) => !superSubBulletpoint.trim() ? null \r\n                  : replaceWithBold(superSubBulletpoint))}\r\n                </StyledUl> \r\n              : replaceWithBold(subBulletpoint))}\r\n            </StyledUl>\r\n            : replaceWithBold(bulletpoint)\r\n          // <li key={`list item ${pIndex}_${bIndex}`}>{bulletpoint}</li>\r\n        )\r\n      );\r\n\r\n      // bulletpointsByParagraph = bulletpointsByParagraph.map((bulletpoint, bIndex) => {\r\n      //   return bulletpoint.replace(/\\*.*?\\*/, (match) => <strong>{match}</strong>)\r\n      // });\r\n\r\n      responseTextList.push(<StyledGuideCard><StyledUl>{bulletpointsByParagraph}</StyledUl></StyledGuideCard>);\r\n    };\r\n\r\n    return responseTextList;\r\n  }\r\n\r\n  const replaceWithBold = (bulletpoint, pIndex, bIndex) => {\r\n    const points = []\r\n    const arr = bulletpoint.split(/(\\*.*?\\*)/g);\r\n    for (let str of arr) {\r\n      if (str.includes(\"*\")) {\r\n        const bold = <strong>{str.replaceAll(\"*\", \"\")}</strong>;\r\n        points.push(bold);\r\n      } else {\r\n        points.push(str);\r\n      }\r\n    }\r\n    return <li key={`list item ${pIndex}_${bIndex}`}>{points}</li>\r\n  };\r\n\r\n  const ScrollingAlert = (props) => {\r\n    const alertRef = useRef();\r\n    const data = props.data;\r\n    const choice = props.choice\r\n\r\n    console.log(data)\r\n    console.log(choice)\r\n\r\n    return (\r\n      <StyledAlert key=\"response\" variant=\"success\" ref={alertRef}>\r\n        <h4>Recommended Treatment:</h4>\r\n          <>{prepareResponseText(queryData(data, [choice])\r\n                .response)}</>\r\n      </StyledAlert>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavHeader {...props} data={managementtype} subtitle={drugtype} />\r\n      <StyledHomeContent>\r\n        <StyledStickyAlert key=\"grade-prompt\" variant=\"dark\" top=\"5.5\">\r\n          Select Toxicity Grade:&nbsp;\r\n          <strong>{gradeSelection}</strong>\r\n          <StyledSubtext>({gradeSource})</StyledSubtext>\r\n        </StyledStickyAlert>\r\n        <StyledAccordion>{cards}</StyledAccordion>\r\n        {gradeSelection &&\r\n          (gradeData.followup ? (\r\n            <>\r\n              <StyledStickyAlert key=\"followup-prompt\" variant=\"dark\" top=\"9.2\">\r\n                {gradeData.followup.name}&nbsp;\r\n                <strong>{prepareFollowupAnswerText(followupSelection)}</strong>\r\n              </StyledStickyAlert>\r\n              <StyledButtonGroup>{optionButtons}</StyledButtonGroup>\r\n              {followupSelection && queryData(gradeData.followup.options, [followupSelection]).followup ? (\r\n                <>\r\n                  <StyledStickyAlert key=\"followup-prompt2\" variant=\"dark\" top=\"12.9\">\r\n                    {queryData(gradeData.followup.options, [followupSelection]).followup.name}&nbsp;\r\n                      <strong>{prepareFollowupAnswerText(followupSelection2)}</strong>\r\n                  </StyledStickyAlert>\r\n                  <StyledButtonGroup>{optionButtons2}</StyledButtonGroup>\r\n                  {followupSelection2 && <ScrollingAlert {...props} data={queryData(gradeData.followup.options, [followupSelection]).followup.options} choice={followupSelection2} />}\r\n                </>\r\n              ) : (\r\n                followupSelection && <ScrollingAlert {...props} data={gradeData.followup.options} choice={followupSelection} />\r\n              )}\r\n            </>\r\n          ) : (\r\n            gradeSelection && <ScrollingAlert {...props} data={grades} choice={gradeSelection} />\r\n          ))}\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentGuide;\r\n","import './App.css';\r\nimport { Container } from 'react-bootstrap'\r\nimport Home from './HomePage/Home';\r\nimport AboutUs from './AboutUsPage/AboutUs';\r\nimport ToxicityManagement from './ToxManagementPage/ToxManagement';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport ManagementType from './ManagementTypePage/ManagementType';\r\nimport TreatmentGuide from './TreatmentGuidePage/TreatmentGuide';\r\nimport { adjustVisitCount } from './utils/utils';\r\n\r\nconst data = require('./data.json');\r\nexport default function App() {\r\n  adjustVisitCount()\r\n  return (\r\n    <Router>\r\n      <Container fluid className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/aboutus\" component={AboutUs} />\r\n          <Route path=\"/toxicitymanagement/:drugtype/:managementtype/\"\r\n            render={(props) => (\r\n              <TreatmentGuide {...props} data={data} />\r\n            )} />\r\n          <Route path=\"/toxicitymanagement/:drugtype/\"\r\n            render={(props) => (\r\n              <ManagementType {...props} data={data} />\r\n            )} />\r\n          {/* <Route exact path=\"/toxicitymanagement/\"\r\n           render={(props) => (\r\n            <ToxicityManagement {...props} data={data} />\r\n           )}/> */}\r\n          {/* <Route exact path=\"/aboutus\" component={AboutUs} /> */}\r\n          {/* <Route exact path=\"/\" component={Home} /> */}\r\n          <Route exact path=\"/\"\r\n            render={(props) => (\r\n              <Home {...props} data={data} />\r\n            )} />\r\n          <Route path=\"/\">\r\n            <Redirect to=\"/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (/* process.env.NODE_ENV === 'production' && */ 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\r\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\r\n      crossOrigin=\"anonymous\"\r\n    /> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}