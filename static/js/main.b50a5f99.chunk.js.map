{"version":3,"sources":["HomePage/logo.jpg","HomePage/styled.js","utils/utils.js","HomePage/Home.js","NavHeader/styled.js","NavHeader/NavHeader.js","AboutUsPage/AboutUs.js","ToxManagementPage/styled.js","ToxManagementPage/ToxManagement.js","ManagementTypePage/styled.js","ManagementTypePage/ManagementType.js","TreatmentGuidePage/styled.js","TreatmentGuidePage/TreatmentGuide.js","App.js","reportWebVitals.js","index.js"],"names":["StyledLogo","styled","img","StyledHomeHeader","Row","StyledHomeFooter","StyledJournalMedical","JournalMedical","StyledCard","Card","StyledInfoCircle","InfoCircle","StyledHomeContent","queryData","data","nameList","endpoint","name","item","handleNextPageClick","history","next","push","window","location","pathname","Home","useHistory","useState","confirmationShow","setConfirmationShow","rejectionShow","setRejectionShow","handleConfirmationClose","src","logo","alt","Modal","centered","show","onHide","backdrop","keyboard","Header","Body","Footer","Button","variant","onClick","CardDeck","Title","StyledHeader","StyledBackButton","ArrowLeftCircle","StyledHeaderText","div","NavHeader","props","previousPage","previousPageSplit","split","length","goBack","lastModified","modiDate","Date","document","getMonth","getDate","getFullYear","AboutUs","Styledli","li","StyledCardHeader","ToxicityManagement","drugs","cards","drug","href","packageInsertURL","target","rel","e","stopPropagation","ManagementType","drugtype","useParams","gradeTypes","StyledChevronDown","ChevronDown","activated","css","StyledAccordion","Accordion","StyledAlert","Alert","StyledStickyAlert","top","StyledButtonGroup","ButtonGroup","TreatmentGuide","managementtype","grades","toggledGrade","setToggledGrade","gradeSelection","setGradeSelection","followupSelection","setFollowupSelection","grade","active","Toggle","as","eventKey","gradeName","Collapse","description","gradeData","optionButtons","followup","options","option","string","prepareResponseText","paragraphs","bulletpoints","paragraph","map","bulletpoint","index","Math","random","ScrollingAlert","alertRef","useRef","hasFollowup","useEffect","ref","response","require","App","Container","fluid","className","path","render","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b50a5f99.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.412a2035.jpg\";","import styled from 'styled-components'\r\nimport { Row, Card } from 'react-bootstrap'\r\nimport { JournalMedical, InfoCircle } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 90%;\r\n    height: 100%;\r\n    // margin-top: 5%;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n`;\r\n\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n    font-size: 300%;\r\n`;\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\n    // display: flex;\r\n    flex-direction: row;\r\n    // background-color: red;\r\n    align-items: center;\r\n    // border: 2px solid rgba(0,0,0,.125);\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n    margin-right: 1%;\r\n`;\r\n\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    justify-content: center;\r\n    margin-top: 9%;\r\n`;\r\n\r\n\r\n// export { \r\n//     StyledLogo, \r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard, \r\n//     StyledInfoCircle\r\n// } ;","export const queryData = (data, nameList) => {\r\n  let endpoint = null;\r\n  \r\n  if (nameList === [null]) {\r\n    return null;\r\n  }\r\n\r\n  for (const name of nameList) {\r\n    for (const item of data) {\r\n      if (item.name === name) {\r\n        data = item;\r\n        endpoint = item;\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  return endpoint;\r\n}\r\n\r\nexport const handleNextPageClick = (history, next) => {\r\n  history.push(`${window.location.pathname}${next}/`);\r\n};","import logo from \"./logo.jpg\";\r\nimport { CardDeck, Card, Modal, Button } from \"react-bootstrap\";\r\nimport {\r\n  StyledHomeHeader,\r\n  StyledLogo,\r\n  StyledJournalMedical,\r\n  StyledHomeContent,\r\n  StyledCard,\r\n  StyledHomeFooter,\r\n  StyledInfoCircle,\r\n} from \"./styled.js\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { handleNextPageClick } from \"../utils/utils\";\r\n\r\nfunction Home() {\r\n  const history = useHistory();\r\n\r\n  const [confirmationShow, setConfirmationShow] = useState(true);\r\n  const [rejectionShow, setRejectionShow] = useState(false);\r\n\r\n  const handleConfirmationClose = () => setConfirmationShow(false);\r\n  const handleConfirmationNo = () => {\r\n    setConfirmationShow(false);\r\n    setRejectionShow(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeHeader>\r\n        <StyledLogo src={logo} alt={\"logo\"}></StyledLogo>\r\n      </StyledHomeHeader>\r\n      BETA VERSION\r\n      <Modal\r\n        centered\r\n        show={confirmationShow}\r\n        onHide={handleConfirmationClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header>\r\n          <h5>Are you a healthcare professional?</h5>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6>You are going to a website that contains clinical information and was created specifically for healthcare professionals.</h6>\r\n        </Modal.Body>\r\n\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleConfirmationNo}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleConfirmationClose}>\r\n            Yes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <Modal centered show={rejectionShow} backdrop=\"static\" keyboard={false}>\r\n        <Modal.Body>\r\n          <h5>This information is designed for healthcare professionals.</h5>\r\n        </Modal.Body>\r\n      </Modal>\r\n      <StyledHomeContent>\r\n        <CardDeck>\r\n          <StyledCard>\r\n            <StyledJournalMedical></StyledJournalMedical>\r\n            <Card.Body>\r\n              <Card.Title>Toxicity Grading</Card.Title>\r\n            </Card.Body>\r\n          </StyledCard>\r\n          <StyledCard\r\n            onClick={() => handleNextPageClick(history, \"toxicitymanagement\")}\r\n          >\r\n            <StyledJournalMedical></StyledJournalMedical>\r\n            <Card.Body>\r\n              <Card.Title>Toxicity Management</Card.Title>\r\n            </Card.Body>\r\n          </StyledCard>\r\n        </CardDeck>\r\n      </StyledHomeContent>\r\n      <StyledHomeFooter>\r\n        <StyledInfoCircle onClick={() => handleNextPageClick(history, \"aboutus\")}/>\r\n        <span>About Us</span>\r\n      </StyledHomeFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import styled from \"styled-components\";\r\nimport { Row, Card } from \"react-bootstrap\";\r\nimport { JournalMedical, InfoCircle } from \"react-bootstrap-icons\";\r\nimport { ArrowLeftCircle } from \"react-bootstrap-icons\";\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 90%;\r\n  height: 100%;\r\n  // margin-top: 5%;\r\n`;\r\n\r\nexport const StyledHeader = styled(Row)`\r\n  // padding-bottom: 4%;\r\n  // padding-top: 4%;\r\n  // box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n  //   rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  // justify-content: center;\r\n  background-color: rgb(26 23 24 / 100%);\r\n  color: rgb(255 255 255 / 100%);\r\n\r\n  position: sticky;\r\n  position: -webkit-sticky;\r\n  z-index: 10;\r\n  top: 0px;\r\n`;\r\n\r\nexport const StyledBackButton = styled(ArrowLeftCircle)`\r\n  font-size: 175%;\r\n  margin: 3%;\r\n  position: absolute;\r\n`\r\n\r\nexport const StyledHeaderText = styled.div`\r\n  font-size: x-large;\r\n  margin: auto;\r\n  margin-top: 2%;\r\n  margin-bottom: 2%;\r\n`;\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n  padding-bottom: 4%;\r\n  padding-top: 4%;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n  font-size: 300%;\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: row;\r\n  // background-color: red;\r\n  align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n  margin-right: 1%;\r\n  vertical-align: text-bottom;\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n  justify-content: center;\r\n  margin-top: 9%;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n`;\r\n\r\n// export {\r\n//     StyledLogo,\r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard,\r\n//     StyledInfoCircle\r\n// } ;\r\n","import { StyledHeader, StyledBackButton, StyledHeaderText } from \"./styled.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction NavHeader(props) {\r\n  let previousPage = props.data;\r\n  \r\n  const previousPageSplit = previousPage.split(\"®\");\r\n\r\n  if (previousPageSplit.length >=2) {\r\n    previousPage = previousPageSplit[0] + \"®\";\r\n  } else {\r\n    previousPage = previousPageSplit[0];\r\n  }\r\n\r\n  const history = useHistory();\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <StyledBackButton onClick={() => history.goBack()} />\r\n        <StyledHeaderText>{previousPage}</StyledHeaderText>\r\n      </StyledHeader>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NavHeader;\r\n","\r\nimport NavHeader from \"../NavHeader/NavHeader\";\r\nimport styled, { css } from \"styled-components\";\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <>\r\n      <NavHeader data={\"About Us\"} />\r\n      <ul>\r\n        <Styledli>This website/application is designed to make proper use of CAR-T cell therapies simpler to understand</Styledli>\r\n        <Styledli>All information on this website/application is based on publicly published FDA documents linked in the \"Toxicity Management\" page.</Styledli>\r\n        <Styledli> We are not responsible for any misuse of any the described drugs or any mistreatment done as a result of this application.</Styledli>\r\n        <Styledli>This code was last updated on {lastModified()}.</Styledli>\r\n      </ul>\r\n    </>)\r\n};\r\nfunction lastModified() {\r\n  var modiDate = new Date(document.lastModified);\r\n  var showAs = `${modiDate.getMonth() + 1}/${modiDate.getDate()}/${modiDate.getFullYear()}`;\r\n  return showAs\r\n}\r\nexport default AboutUs;\r\n\r\nexport const Styledli = styled.li`\r\n    width: 100%;\r\n    text-align: left;\r\n    position: relative;\r\n    padding: 2%;\r\n    margin-bottom: unset;\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { Row, Card } from \"react-bootstrap\";\r\nimport { JournalMedical, InfoCircle } from \"react-bootstrap-icons\";\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 90%;\r\n  height: 100%;\r\n  // margin-top: 5%;\r\n`;\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n  padding-bottom: 4%;\r\n  padding-top: 4%;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n  padding-bottom: 4%;\r\n  padding-top: 4%;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n  font-size: 300%;\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: row;\r\n  // background-color: red;\r\n  align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n  margin-right: 1%;\r\n  vertical-align: text-bottom;\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n  justify-content: center;\r\n  margin-top: 9%;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n`;\r\n\r\n// export {\r\n//     StyledLogo,\r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard,\r\n//     StyledInfoCircle\r\n// } ;\r\n","import { CardDeck, Card } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport {\r\n  StyledHomeContent,\r\n  StyledCard,\r\n  StyledInfoCircle,\r\n  StyledCardHeader,\r\n} from \"./styled.js\";\r\nimport { handleNextPageClick } from \"../utils/utils.js\";\r\nimport NavHeader from '../NavHeader/NavHeader';\r\n\r\nfunction ToxicityManagement(props) {\r\n  const history = useHistory();\r\n  const drugs = props.data.drugs;\r\n\r\n  const cards = [];\r\n\r\n  for (const drug of drugs) {\r\n    cards.push(\r\n      <div\r\n        key={`${drug.name} card`}\r\n        onClick={() => handleNextPageClick(history, drug.name)}\r\n      >\r\n        <StyledCard>\r\n          <Card.Title>\r\n            <StyledCardHeader>\r\n              {drug.name}\r\n              <a\r\n                href={drug.packageInsertURL}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n                onClick={(e) => e.stopPropagation()}\r\n                // onTouchTap={(e) => { e.preventDefault(); this.finish()}}\r\n              >\r\n                <StyledInfoCircle />\r\n              </a>\r\n            </StyledCardHeader>\r\n          </Card.Title>\r\n        </StyledCard>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavHeader {...props} data={\"Toxicity Management\"}/>\r\n      <StyledHomeContent>\r\n        <CardDeck>{cards}</CardDeck>\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ToxicityManagement;\r\n","import styled from \"styled-components\";\r\nimport { Row, Card } from \"react-bootstrap\";\r\nimport { JournalMedical, InfoCircle } from \"react-bootstrap-icons\";\r\n\r\nexport const StyledLogo = styled.img`\r\n  width: 90%;\r\n  height: 100%;\r\n  // margin-top: 5%;\r\n`;\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n  padding-bottom: 4%;\r\n  padding-top: 4%;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n  padding-bottom: 4%;\r\n  padding-top: 4%;\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n`;\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n  font-size: 300%;\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  // display: flex;\r\n  flex-direction: row;\r\n  // background-color: red;\r\n  align-items: center;\r\n  // border: 2px solid rgba(0,0,0,.125);\r\n  box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px,\r\n    rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n`;\r\n\r\nexport const StyledInfoCircle = styled(InfoCircle)`\r\n  margin-right: 1%;\r\n  vertical-align: text-bottom;\r\n`;\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n  justify-content: center;\r\n  margin-top: 9%;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: unset;\r\n  border-bottom: unset;\r\n`;\r\n\r\n// export {\r\n//     StyledLogo,\r\n//     StyledHomeHeader,\r\n//     StyledHomeContent,\r\n//     StyledHomeFooter,\r\n//     StyledJournalMedical,\r\n//     StyledCard,\r\n//     StyledInfoCircle\r\n// } ;\r\n","import { CardDeck, Card } from \"react-bootstrap\";\r\nimport { StyledHomeContent, StyledCard } from \"./styled.js\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useParams } from \"react-router\";\r\nimport { queryData, handleNextPageClick } from \"../utils/utils.js\";\r\nimport NavHeader from '../NavHeader/NavHeader';\r\n\r\nfunction ManagementType(props) {\r\n  const data = props.data;\r\n  const { drugtype } = useParams();\r\n  const gradeTypes = queryData(data.drugs, [drugtype]).gradeTypes;\r\n\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <>\r\n      <NavHeader {...props} data={drugtype}/>\r\n      <StyledHomeContent>\r\n        <CardDeck>\r\n          <div onClick={(e) => { handleNextPageClick(history, gradeTypes[0].name)}  \r\n          // onClick={(e) => {e.stopPropagation(); e.preventDefault(); this.finish()}}\r\n}>\r\n            <StyledCard>\r\n              <Card.Body>\r\n                <Card.Title>{gradeTypes[0].name}</Card.Title>\r\n              </Card.Body>\r\n            </StyledCard>\r\n          </div>\r\n          <div onClick={() => handleNextPageClick(history, gradeTypes[1].name)}>\r\n            <StyledCard>\r\n              <Card.Body>\r\n                <Card.Title>{gradeTypes[1].name}</Card.Title>\r\n              </Card.Body>\r\n            </StyledCard>\r\n          </div>\r\n        </CardDeck>\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ManagementType;\r\n","import styled, { css } from \"styled-components\";\r\n// import { css }  from 'styled-components'\r\nimport { Row, Card, Accordion, Alert, ButtonGroup } from 'react-bootstrap'\r\nimport { JournalMedical, ChevronDown } from 'react-bootstrap-icons';\r\n\r\n\r\nexport const StyledLogo = styled.img`\r\n    width: 90%;\r\n    height: 100%;\r\n    // margin-top: 5%;\r\n`;\r\n\r\n\r\nexport const StyledHomeHeader = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const StyledHomeFooter = styled(Row)`\r\n    padding-bottom: 4%;\r\n    padding-top: 4%;\r\n    box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position:fixed;\r\n    left:0;\r\n    bottom:0;\r\n    right:0;\r\n`;\r\n\r\n\r\nexport const StyledJournalMedical = styled(JournalMedical)`\r\n    font-size: 300%;\r\n`;\r\n\r\n\r\nexport const StyledCard = styled(Card)`\r\n    // display: flex;\r\n    // flex-direction: row;\r\n    // background-color: red;\r\n    // align-items: center;\r\n    // border: 2px solid rgba(0,0,0,.125);\r\n    // box-shadow: rgb(101 119 134 / 25%) 0px 0px 15px, rgb(101 119 134 / 11%) 0px 0px 3px 1px;\r\n    border: unset;\r\n`;\r\n\r\n\r\nexport const StyledChevronDown = styled(ChevronDown)`\r\n    margin-right: 1%;\r\n    transform: rotate(0deg);\r\n    transition: transform .2s ease-out;\r\n\r\n    ${ props => props.activated && css`\r\n        transform: rotate(180deg);\r\n  `};\r\n`;\r\n\r\n\r\nexport const StyledHomeContent = styled(Row)`\r\n    justify-content: center;\r\n    // margin-top: 9%;\r\n`;\r\n\r\nexport const StyledAccordion = styled(Accordion)`\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n`;\r\n\r\nexport const StyledCardHeader = styled(Card.Header)`\r\n    justify-content: space-between;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: unset;\r\n    border-bottom: unset;\r\n`;\r\n\r\nexport const StyledAlert = styled(Alert)`\r\n    width: 100%;\r\n    text-align: left;\r\n    position: relative;\r\n    padding: 2%;\r\n    margin-bottom: unset;\r\n`;\r\n\r\nexport const StyledStickyAlert = styled(Alert)`\r\n    width: 100%;\r\n    text-align: left;\r\n    padding: 2%;\r\n    margin-bottom: unset;\r\n    position: sticky;\r\n    position: -webkit-sticky;\r\n    border-radius: unset;\r\n    z-index: 10;\r\n\r\n    ${ props => css`\r\n        top: ${props.top}px;\r\n    `};\r\n`;\r\n\r\nexport const StyledButtonGroup = styled(ButtonGroup)`\r\n    width: 100%;\r\n`;\r\n","import { Card, Accordion, Button } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useParams } from \"react-router\";\r\nimport {\r\n  StyledHomeContent,\r\n  StyledChevronDown,\r\n  StyledCard,\r\n  StyledAccordion,\r\n  StyledCardHeader,\r\n  StyledAlert,\r\n  StyledButtonGroup,\r\n  StyledStickyAlert\r\n} from \"./styled.js\";\r\nimport { queryData } from \"../utils/utils.js\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport NavHeader from \"../NavHeader/NavHeader\";\r\n\r\nfunction TreatmentGuide(props) {\r\n  const history = useHistory();\r\n  const data = props.data;\r\n  const { drugtype, managementtype } = useParams();\r\n  const grades = queryData(queryData(data.drugs, [drugtype]).gradeTypes, [\r\n    managementtype,\r\n  ]).grades;\r\n\r\n  const [toggledGrade, setToggledGrade] = useState(\"\");\r\n  const [gradeSelection, setGradeSelection] = useState(\"\");\r\n  const [followupSelection, setFollowupSelection] = useState(\"\");\r\n  // let toggledGrade = \"\";\r\n\r\n  const cards = [];\r\n\r\n  const stopPropagation = (e) => {\r\n    // e.preventDefault();\r\n    // e.cancelBubble = true;\r\n    // e.stopPropagation();\r\n    // e.preventDefault();\r\n    // e.nativeEvent.stopImmediatePropagation();\r\n  };\r\n\r\n  const handleAccordionToggle = (e, gradeName) => {\r\n    if (toggledGrade === gradeName) {\r\n      setToggledGrade(\"\");\r\n    } else {\r\n      setToggledGrade(gradeName);\r\n    }\r\n  };\r\n  \r\n  for (const grade of grades) {\r\n    cards.push(\r\n      <StyledCard>\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          key={`${grade.name} card`}\r\n          active={grade.name === gradeSelection}\r\n          // active={null}\r\n          onClick={(e) => {\r\n            setGradeSelection(grade.name);\r\n            setFollowupSelection(\"\");\r\n          }}\r\n          // onFocus={null}\r\n          // onMouseDown={null}\r\n          // onMouseMove={null}\r\n          // onTouchMove={null}\r\n          // onTouchStart={null}\r\n        >\r\n          <StyledCardHeader>\r\n            {grade.name}\r\n            <Accordion.Toggle\r\n              as={\"div\"}\r\n              variant=\"\"\r\n              eventKey={grade.name}\r\n              onClick={(e) => handleAccordionToggle(e, grade.name)}\r\n              // onClick={stopPropagation}\r\n              // onMouseDown={stopPropagation}\r\n            >\r\n              <StyledChevronDown activated={grade.name === toggledGrade}/>\r\n            </Accordion.Toggle>\r\n          </StyledCardHeader>\r\n          <Accordion.Collapse eventKey={grade.name}>\r\n            <Card.Body>{grade.description}</Card.Body>\r\n          </Accordion.Collapse>\r\n        </Button>\r\n      </StyledCard>\r\n    );\r\n  }\r\n\r\n  const gradeData = queryData(grades, [gradeSelection]);\r\n\r\n  const optionButtons = [];\r\n  if (gradeData && gradeData.followup) {\r\n    for (const option of gradeData.followup.options) {\r\n      optionButtons.push(\r\n        <Button\r\n          variant=\"outline-primary\"\r\n          key={`${option.name} option`}\r\n          active={option.name === followupSelection}\r\n          onClick={() => setFollowupSelection(option.name)}\r\n        >\r\n          {option.name}\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  const prepareFollowupAnswerText = (string) => {\r\n    const stringSplit = string.split(\"(\");\r\n\r\n    return stringSplit[0];\r\n  }\r\n\r\n  const prepareResponseText = (string) => {\r\n    const paragraphs = string.split(/&|\\n\\n/);\r\n    const bulletpoints = [];\r\n\r\n    for (const paragraph of paragraphs) {\r\n      bulletpoints.push(paragraph.split(\"\\n\"));\r\n    }\r\n\r\n    return bulletpoints.map((bulletpoint, index) =>\r\n      bulletpoint == false ? null : (\r\n        <li key={`list item ${Math.random()}`}>{bulletpoint}</li> // this needs to not be random() dependant\r\n      )\r\n    );\r\n  };\r\n\r\n  const ScrollingAlert = (props) => {\r\n    const alertRef = useRef();\r\n    const hasFollowup = props.hasFollowup;\r\n\r\n    useEffect(() => {\r\n      // alertRef.current.scrollIntoView({ behavior: 'smooth' });\r\n    });\r\n\r\n    return (\r\n      <StyledAlert key=\"response\" variant=\"success\" ref={alertRef}>\r\n        <h4>Recommended Treatment:</h4>\r\n        {hasFollowup ? (\r\n          <ul>\r\n            {prepareResponseText(\r\n              queryData(gradeData.followup.options, [followupSelection])\r\n                .response\r\n            )}\r\n          </ul>\r\n        ) : (\r\n          <ul>{prepareResponseText(gradeData.response)}</ul>\r\n        )}\r\n      </StyledAlert>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavHeader {...props} data={managementtype} />\r\n      <StyledHomeContent>\r\n        <StyledStickyAlert key=\"grade-prompt\" variant=\"dark\" top=\"51\">\r\n          Select Toxicity Grade:&nbsp;\r\n          <strong>{gradeSelection}</strong>\r\n        </StyledStickyAlert>\r\n        <StyledAccordion>{cards}</StyledAccordion>\r\n        {gradeSelection &&\r\n          (gradeData.followup ? (\r\n            <>\r\n              <StyledStickyAlert key=\"followup-prompt\" variant=\"dark\" top=\"91\">\r\n                {gradeData.followup.name}&nbsp;\r\n                <strong>{prepareFollowupAnswerText(followupSelection)}</strong>\r\n              </StyledStickyAlert>\r\n              <StyledButtonGroup>{optionButtons}</StyledButtonGroup>\r\n              {followupSelection && (\r\n                <ScrollingAlert {...props} hasFollowup={true} />\r\n              )}\r\n            </>\r\n          ) : (\r\n            <ScrollingAlert {...props} hasFollowup={false} />\r\n          ))}\r\n      </StyledHomeContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TreatmentGuide;\r\n","import './App.css';\r\nimport { Container } from 'react-bootstrap'\r\nimport Home from './HomePage/Home';\r\nimport AboutUs from './AboutUsPage/AboutUs';\r\nimport ToxicityManagement from './ToxManagementPage/ToxManagement';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport ManagementType from './ManagementTypePage/ManagementType';\r\nimport TreatmentGuide from './TreatmentGuidePage/TreatmentGuide';\r\n\r\nconst data = require('./data.json');\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Container fluid className=\"App\">\r\n        <Switch>\r\n        <Route path=\"/toxicitymanagement/:drugtype/:managementtype/\"           \r\n          render={(props) => (\r\n            <TreatmentGuide {...props} data={data} />\r\n           )}/>\r\n          <Route path=\"/toxicitymanagement/:drugtype/\"           \r\n          render={(props) => (\r\n            <ManagementType {...props} data={data} />\r\n           )}/>\r\n          <Route exact path=\"/toxicitymanagement/\"\r\n           render={(props) => (\r\n            <ToxicityManagement {...props} data={data} />\r\n           )}/>\r\n          <Route exact path=\"/aboutus\" component={AboutUs} />\r\n          <Route exact path=\"/\" component={Home} />\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <link\r\n      rel=\"stylesheet\"\r\n      href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\r\n      integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\r\n      crossOrigin=\"anonymous\"\r\n    /> */}\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}